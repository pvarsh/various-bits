<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>ContentFilters</key>
	<dict/>
	<key>auto_connect</key>
	<true/>
	<key>data</key>
	<dict>
		<key>connection</key>
		<dict>
			<key>database</key>
			<string>boats</string>
			<key>host</key>
			<string>localhost</string>
			<key>name</key>
			<string>boats</string>
			<key>rdbms_type</key>
			<string>mysql</string>
			<key>sslCACertFileLocation</key>
			<string></string>
			<key>sslCACertFileLocationEnabled</key>
			<integer>0</integer>
			<key>sslCertificateFileLocation</key>
			<string></string>
			<key>sslCertificateFileLocationEnabled</key>
			<integer>0</integer>
			<key>sslKeyFileLocation</key>
			<string></string>
			<key>sslKeyFileLocationEnabled</key>
			<integer>0</integer>
			<key>type</key>
			<string>SPSocketConnection</string>
			<key>useSSL</key>
			<integer>0</integer>
			<key>user</key>
			<string>root</string>
		</dict>
		<key>session</key>
		<dict>
			<key>connectionEncoding</key>
			<string>latin1</string>
			<key>contentFilter</key>
			<dict/>
			<key>contentPageNumber</key>
			<integer>1</integer>
			<key>contentSelection</key>
			<data>
			YnBsaXN0MDDUAQIDBAUGJCVYJHZlcnNpb25YJG9iamVjdHNZJGFy
			Y2hpdmVyVCR0b3ASAAGGoKgHCBMUFRYaIVUkbnVsbNMJCgsMDxJX
			TlMua2V5c1pOUy5vYmplY3RzViRjbGFzc6INDoACgAOiEBGABIAF
			gAdUdHlwZVRyb3dzXxAdU2VsZWN0aW9uRGV0YWlsVHlwZU5TSW5k
			ZXhTZXTSFwsYGVxOU1JhbmdlQ291bnQQAIAG0hscHR5aJGNsYXNz
			bmFtZVgkY2xhc3Nlc1pOU0luZGV4U2V0oh8gWk5TSW5kZXhTZXRY
			TlNPYmplY3TSGxwiI1xOU0RpY3Rpb25hcnmiIiBfEA9OU0tleWVk
			QXJjaGl2ZXLRJidUZGF0YYABAAgAEQAaACMALQAyADcAQABGAE0A
			VQBgAGcAagBsAG4AcQBzAHUAdwB8AIEAoQCmALMAtQC3ALwAxwDQ
			ANsA3gDpAPIA9wEEAQcBGQEcASEAAAAAAAACAQAAAAAAAAAoAAAA
			AAAAAAAAAAAAAAABIw==
			</data>
			<key>contentSortColIsAsc</key>
			<true/>
			<key>contentViewport</key>
			<string>{{0, 0}, {745, 481}}</string>
			<key>isToolbarVisible</key>
			<true/>
			<key>queries</key>
			<string>
/*----- 1. Find the colors of boats reserved by Lubber. ----- */
SELECT DISTINCT color
FROM boats s, reserves b, sailors r
WHERE s.bid = b.bid AND r.sid = b.sid AND r.sname LIKE 'Lubber';

/*----- 2. Find all IDs of sailors who have a rating of at least 8 or have reserved boat 103 -------*/
/* Incorrect */
SELECT DISTINCT s.sid
FROM sailors s, reserves r
WHERE s.sid = r.sid AND (s.rating &gt;= 8 OR r.bid = 103);

/* Correct with LEFT JOIN */
SELECT DISTINCT s.sid
FROM sailors s LEFT JOIN reserves r ON s.sid = r.sid
WHERE s.rating &gt;= 8 OR r.bid = 103 ORDER BY s.sid;

/* Correct with UNION */
(SELECT sid
	FROM sailors s
	WHERE s.rating &gt;= 8)
UNION (
	SELECT s.sid
	FROM sailors s, reserves r
	WHERE s.sid = r.sid AND r.bid = 103
	)
ORDER BY sid;

/*----- Extra question: Find the names of sailors who have not reserved a boat ------- */
SELECT s.sname
FROM sailors s LEFT JOIN reserves r ON s.sid = r.sid
WHERE r.bid IS NULL
;

/*----- 3. Find the names of sailors who have not reserved a red boat ------- */
/* Sailors who did not rent any boats */
SELECT s.sname
FROM sailors s LEFT JOIN reserves r ON s.sid = r.sid
WHERE r.bid IS NULL
;
/* Reserves of non-red boats */
SELECT sid
FROM reserves r JOIN boats b ON r.bid = b.bid
WHERE b.color LIKE 'red'
;

/* Correct answer */
SELECT sname, sid
FROM sailors
WHERE sid NOT IN (SELECT sid
	FROM reserves r JOIN boats b ON r.bid = b.bid
	WHERE b.color LIKE 'red'
)
ORDER BY sname;

/* Sailors who reserved non-red boats */
SELECT s.sname
FROM sailors s JOIN (
	SELECT sid
	FROM reserves r JOIN boats b ON r.bid = b.bid
	WHERE b.color &lt;&gt; 'red'
	)nonreds
	ON s.sid = nonreds.sid
;

/* Natural join of all three tables by IDs. */
SELECT * FROM sailors s, reserves r, boats b WHERE s.sid = r.sid AND b.bid = r.bid;

/*------ 4. Find the IDs of sailors with age over 20 who have not reserved a red boat ---- */
SELECT s.sname, s.sid, s.age
FROM sailors s
WHERE sid NOT IN (SELECT sid
	FROM reserves r JOIN boats b ON r.bid = b.bid
	WHERE b.color LIKE 'red'
) AND s.age &gt; 20
ORDER BY s.sname;

/*------ 5. Find the names of sailors who have reserved at least two boats ------*/
SELECT s.sname
FROM (reserves r1 JOIN reserves r2 ON r1.sid = r2.sid)
JOIN sailors s ON s.sid = r1.sid
WHERE r1.bid &lt; r2.bid
GROUP BY s.sid
;

/*------ 6. Find the names of sailors who have reserved all boats ------*/
SELECT * FROM boats;
SELECT COUNT(bid) FROM boats UNION boats;

/* Count counts duplicates */
SELECT COUNT(bid) FROM
(SELECT * FROM boats
UNION ALL
SELECT * FROM boats) bb
;

/* List boats a sailor reserved */
SELECT s.sid, r.bid
FROM sailors s JOIN reserves r ON s.sid = r.sid
;
/* Count distinct boats a sailor reserved */
SELECT s.sid, COUNT(DISTINCT r.bid)
FROM sailors s JOIN reserves r ON s.sid = r.sid
GROUP BY s.sid;

/* Insert another reserve for lubber for boat 102 which lubber had already reserved another day */
INSERT INTO reserves (sid, bid, day) VALUES(31, 102, "2004-11-11");
INSERT INTO reserves (sid, bid, day) VALUES(31, 101, "2004-11-11");
/* Delete inserted reserve */
DELETE FROM reserves WHERE bid = 102 AND sid = 31 AND day = "2004-11-11";
DELETE FROM reserves WHERE bid = 101 AND sid = 31 AND day = "2004-11-11";

/* Answer */
SELECT s.sname, s.sid
FROM sailors s JOIN ( SELECT s.sid, COUNT(DISTINCT r.bid) AS cnt
					FROM sailors s JOIN reserves r ON s.sid = r.sid
 					GROUP BY s.sid
 				  ) sr ON s.sid = sr.sid
WHERE sr.cnt = (SELECT COUNT(b.bid) as numboats FROM boats b)
;

/*------ 7. Find the names of sailors who have reserved all boats called BigBoat ------ */</string>
			<key>table</key>
			<string>reserves</string>
			<key>view</key>
			<string>SP_VIEW_CUSTOMQUERY</string>
			<key>windowVerticalDividerPosition</key>
			<real>202</real>
		</dict>
	</dict>
	<key>encrypted</key>
	<false/>
	<key>format</key>
	<string>connection</string>
	<key>queryFavorites</key>
	<array/>
	<key>queryHistory</key>
	<array>
		<string>SELECT s.sname, s.sid
FROM sailors s JOIN ( SELECT s.sid, COUNT(DISTINCT r.bid) AS cnt
					FROM sailors s JOIN reserves r ON s.sid = r.sid
 					GROUP BY s.sid
 				  ) sr ON s.sid = sr.sid
WHERE sr.cnt = (SELECT COUNT(b.bid) as numboats FROM boats b)</string>
		<string>DELETE FROM reserves WHERE bid = 101 AND sid = 31 AND day = "2004-11-11"</string>
		<string>INSERT INTO reserves (sid, bid, day) VALUES(31, 101, "2004-11-11")</string>
		<string>/* List boats a sailor reserved */
SELECT s.sid, r.bid
FROM sailors s JOIN reserves r ON s.sid = r.sid</string>
		<string>/* Count distinct boats a sailor reserved */
SELECT s.sid, COUNT(DISTINCT r.bid)
FROM sailors s JOIN reserves r ON s.sid = r.sid
GROUP BY s.sid</string>
		<string>SELECT COUNT(b.bid) FROM boats b</string>
		<string>SELECT s.sname, s.sid
FROM sailors s JOIN ( SELECT s.sid, COUNT(DISTINCT r.bid) AS cnt
					FROM sailors s JOIN reserves r ON s.sid = r.sid
 					GROUP BY s.sid
 				  ) sr ON s.sid = sr.sid
WHERE sr.cnt = SELECT COUNT(b.bid) as numboats FROM boats b</string>
		<string>SELECT s.sname, s.sid
FROM sailors s JOIN ( SELECT s.sid, COUNT(DISTINCT r.bid) AS cnt
					FROM sailors s JOIN reserves r ON s.sid = r.sid
 					GROUP BY s.sid
 				  ) sr ON s.sid = sr.sid
WHERE sr.cnt = SELECT COUNT(b.bid) FROM boats b as numboats</string>
		<string>SELECT s.sname, s.sid
FROM sailors s JOIN ( SELECT s.sid, COUNT(DISTINCT r.bid) AS cnt
					FROM sailors s JOIN reserves r ON s.sid = r.sid
 					GROUP BY s.sid
 				  ) sr ON s.sid = sr.sid
WHERE sr.cnt = SELECT COUNT(b.bid) FROM boats b</string>
		<string>SELECT s.sname, s.sid
FROM sailors s JOIN ( SELECT s.sid, COUNT(DISTINCT r.bid)
					FROM sailors s JOIN reserves r ON s.sid = r.sid
 					GROUP BY s.sid
 				  ) sr ON s.sid = sr.sid</string>
		<string>SELECT s.sname, sid
FROM sailors s JOIN ( SELECT s.sid, COUNT(DISTINCT r.bid)
					FROM sailors s JOIN reserves r ON s.sid = r.sid
 					GROUP BY s.sid
 				  ) sr ON s.sid = sr.sid</string>
		<string>SELECT s.sname
FROM sailors s JOIN ( SELECT s.sid, COUNT(DISTINCT r.bid)
					FROM sailors s JOIN reserves r ON s.sid = r.sid
 					GROUP BY s.sid
 				  ) sr ON s.sid = sr.sid</string>
		<string>SELECT * FROM sailors s, reserves r where s.sid = r.sid ORDER BY s.sid</string>
		<string>DELETE FROM reserves WHERE bid = 102 AND sid = 31 AND day = "2004-11-11"</string>
		<string>DELETE FROM reserves WHERE bid = 102, sid = 31, day = "2004-11-11"</string>
		<string>/* Count unique boats a sailor reserved */
SELECT s.sid, COUNT(DISTINCT r.bid)
FROM sailors s JOIN reserves r ON s.sid = r.sid
GROUP BY s.sid</string>
		<string>/* Count unique boats a sailor reserved */
SELECT s.sid, COUNT(r.bid)
FROM sailors s JOIN reserves r ON s.sid = r.sid
GROUP BY s.sid</string>
		<string>SELECT * FROM sailors s, reserves r where s.sid = r.sid</string>
		<string>INSERT INTO reserves (sid, bid, day) VALUES(31, 102, "2004-11-11")</string>
		<string>/* List boats a sailor reserved */
SELECT s.sid, r.bid
FROM sailors s JOIN reserves r ON s.sid = r.sid
GROUP BY s.sid</string>
	</array>
	<key>rdbms_type</key>
	<string>mysql</string>
	<key>rdbms_version</key>
	<string>5.6.21</string>
	<key>version</key>
	<integer>1</integer>
</dict>
</plist>
